<ui:FluentWindow x:Class="MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:local="clr-namespace:CompactGUI"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:tray="http://schemas.lepo.co/wpfui/2022/xaml/tray"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 x:Name="MainWindow" Title="CompactGUI"
                 Width="1300" Height="700" MinWidth="768" MinHeight="600"
                 d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
                 ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
                 ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                 ExtendsContentIntoTitleBar="True"
                 Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                 RenderOptions.BitmapScalingMode="HighQuality" WindowBackdropType="Mica"
                 WindowCornerPreference="Round" WindowStartupLocation="CenterScreen"
                 mc:Ignorable="d" Closing="MainWindow_Closing">
    <bh:Interaction.Triggers>

        <bh:EventTrigger EventName="Closing">
            <bh:InvokeCommandAction Command="{Binding ClosingCommand}" PassEventArgsToCommand="True" />
        </bh:EventTrigger>
    </bh:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ui:TitleBar Grid.Row="0" Grid.ColumnSpan="2"
                     IsHitTestVisible="True" />



        <ui:NavigationView x:Name="NavigationView"
                           Grid.Row="1" Transition="FadeIn"
                           IsBackButtonVisible="Collapsed" PaneDisplayMode="Top">
            <ui:NavigationView.MenuItems>


                <ui:NavigationViewItem Content="Home"
                                       Margin="15,2,15,10"
                                       NavigationCacheMode="Required"
                                       Tag="{Binding}"
                                       TargetPageType="{x:Type local:HomePage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Symbol="Home24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>


                <ui:NavigationViewItem Content="Watcher"
                                       Margin="15,2,15,10"
                                       NavigationCacheMode="Required"
                                       Tag="{Binding}"
                                       TargetPageType="{x:Type local:WatcherPage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Filled="False" Symbol="Eye24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>

                <ui:NavigationViewItem Content="Compression DB"
                       Margin="15,2,15,10"
                       NavigationCacheMode="Disabled"
                       Tag="{Binding}"
                       TargetPageType="{x:Type local:DatabasePage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Filled="False" Symbol="Database24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>
                
                <ui:NavigationViewItem Content="Batch Processing"
                       Margin="15,2,15,10"
                       NavigationCacheMode="Required"
                       Tag="{Binding}"
                       TargetPageType="{x:Type local:BatchProcessingPage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Filled="False" Symbol="Stack24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>
                
                <ui:NavigationViewItem Content="Scheduler"
                       Margin="15,2,15,10"
                       NavigationCacheMode="Required"
                       Tag="{Binding}"
                       TargetPageType="{x:Type local:SchedulerPage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Filled="False" Symbol="Clock24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>
                
                <ui:NavigationViewItem Content="Statistics"
                       Margin="15,2,15,10"
                       NavigationCacheMode="Required"
                       Tag="{Binding}"
                       TargetPageType="{x:Type local:StatisticsPage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Filled="False" Symbol="DataHistogram24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>
                
                <ui:NavigationViewItem Content="Profiles"
                       Margin="15,2,15,10"
                       NavigationCacheMode="Required"
                       Tag="{Binding}"
                       TargetPageType="{x:Type local:ProfilesPage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:SymbolIcon Filled="False" Symbol="PersonSettings24" />
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>

            </ui:NavigationView.MenuItems>

            <ui:NavigationView.FooterMenuItems>

                <ui:NavigationViewItem Margin="-5,0,15,1"
                                       NavigationCacheMode="Required"
                                       Tag="{Binding}"
                                       TargetPageType="{x:Type local:SettingsPage}">
                    <!--  TargetPageType="{x:Type local:SettingsPage}"  -->

                    <ui:SymbolIcon Margin="0,0,-3,0"
                                   FontSize="16" Symbol="Settings48" />

                </ui:NavigationViewItem>
            </ui:NavigationView.FooterMenuItems>


            <ui:NavigationView.ContentOverlay>
                <Grid>
                    <ui:SnackbarPresenter x:Name="SnackbarPresenter" />
                </Grid>
            </ui:NavigationView.ContentOverlay>


        </ui:NavigationView>


        <Grid x:Name="RootContentDialog"
              Grid.Row="0" Grid.RowSpan="2"
              Margin="0" Panel.ZIndex="-1"
              ClipToBounds="True">

            <Border Background="#263340"/>
            <Border>
                <Border.Background>
                    <LinearGradientBrush Opacity="0.4" StartPoint="0,0.5" EndPoint="0.2,1">
                        <GradientStop Offset="0" Color="#283e51" />
                        <GradientStop Offset="1" Color="#2d425d" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <local:ImageControl x:Name="SteamBg"
                                Height="{Binding ActualHeight, ElementName=MainWindow}"
                                Margin="-75" HorizontalAlignment="Center" VerticalAlignment="Center"
                                ClipToBounds="True" 
                                NewSource="{Binding BackgroundImage}"
                                Opacity="1" Stretch="UniformToFill">

                <local:ImageControl.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="2" ScaleY="2" />
                    </TransformGroup>

                </local:ImageControl.RenderTransform>
                <local:ImageControl.RenderTransformOrigin>
                    <Point X="0.5" Y="0.5" />
                </local:ImageControl.RenderTransformOrigin>
                <local:ImageControl.Triggers>
                    <EventTrigger RoutedEvent="local:ImageControl.SourceChanged">
                        <BeginStoryboard>
                            <Storyboard>

                                <DoubleAnimation Storyboard.TargetProperty="(Image.Opacity)" From="0" To="0.6" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).Radius" From="100" To="14" Duration="0:0:5" />
                                <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                 From="2" To="1.2" Duration="0:0:6">
                                    <DoubleAnimation.EasingFunction>
                                        <QuinticEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                 From="2" To="1.2" Duration="0:0:8">
                                    <DoubleAnimation.EasingFunction>
                                        <QuinticEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <!--<EventTrigger RoutedEvent="local:ImageControl.SourceChanging">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).Radius" To="100" Duration="0:0:0" BeginTime="0:0:0"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Image.Opacity)" To="0" Duration="0:0:0"/>

                                <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="2.0"  Duration="0:0:0"/>
                                <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1.2" Duration="0:0:0"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>-->
                </local:ImageControl.Triggers>


                <local:ImageControl.Effect>
                    <BlurEffect KernelType="Box" Radius="0" RenderingBias="Quality" />
                </local:ImageControl.Effect>


            </local:ImageControl>

            <Label x:Name="ProgTitle"
                      
                       Margin="20,16" HorizontalAlignment="Left"
                       d:Visibility="Visible" FontSize="14" Visibility="Collapsed">
                <Label.RenderTransform>
                    <TranslateTransform x:Name="TransformL" Y="20" />
                </Label.RenderTransform>
                <Label.Style>
                    <Style TargetType="Label">
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Self}}" Value="Visible">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0" />
                                            <!--  Fade-in animation  -->
                                            <DoubleAnimation BeginTime="0:0:0.5"
                                                             Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1.5" />

                                            <!--  Move upwards animation  -->
                                            <DoubleAnimation BeginTime="0:0:0.5"
                                                             Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)" From="10" To="0"
                                                             Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Margin="0 0 20 0"  Text="CompactGUI" VerticalAlignment="Center" Foreground="#10FFFFFF" Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToInverseVisibilityConverter}}"/>
                    <Border Background="#20f44336" CornerRadius="10" Width="80" Height="22" Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock  Text="Admin" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Center"/>

                    </Border>
                </StackPanel>
            </Label>


        </Grid>
        <ui:SnackbarPresenter x:Name="RootSnackbar"
                              Grid.Row="1" Grid.Column="0"
                              MaxWidth="600" />
        <tray:NotifyIcon x:Name="NotifyIconTray"
                         Grid.Row="0"
                         FocusOnLeftClick="True" MenuOnRightClick="True" TooltipText="CompactGUI">
            <tray:NotifyIcon.Menu>
                <ContextMenu x:Name="NotifyIconTrayMenu">
                    <MenuItem Command="{Binding NotifyIconOpenCommand}" Header="Open" />
                    <MenuItem Command="{Binding NotifyIconExitCommand}" Header="Exit" />
                </ContextMenu>
            </tray:NotifyIcon.Menu>
        </tray:NotifyIcon>

    </Grid>
</ui:FluentWindow>
